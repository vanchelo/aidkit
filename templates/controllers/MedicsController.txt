<?php

/**
 * AidkitUsers will be called Medics by default
 * For conveniance you can still call the current user of a Session
 * using Auth::user()
 */

class AidkitMedicsController extends AidkitController
{
	public function index()
	{
		$medics = Medic::paginate(15);
		$this->layout->content = View::make('aidkit::resources.medics.index', compact('medics'));
	}

	public function create()
	{
		$this->layout->content = View::make('aidkit::resources.medics.create');
	}

	public function store()
	{
		$medic = new Medic(Input::get());
		$medic->password = Input::get('password');
		$medic->role = Input::get('role');

		if ($medic->save())
		{
			return Redirect::route(Config::get('aidkit::config.urlprefix') . '.medics.index');
		}

		return Redirect::back()->withInput()->withErrors($medic->errors);
	}

	public function show($id)
	{
		$medic = Medic::findOrFail($id);
		$this->layout->content = View::make('aidkit::resources.medics.show', compact('medic'));
	}

	public function edit($id)
	{
		$medic = Medic::findOrFail($id);
		$this->layout->content = View::make('aidkit::resources.medics.edit', compact('medic'));
	}

	public function update($id)
	{
		$medic = Medic::findOrFail($id);

		$medic->role = Input::get('role');
		if (Input::has('new_password'))
		{
			$medic->password = Input::get('new_password');
		}

		if ($medic->update(Input::get()))
		{
			return Redirect::route(Config::get('aidkit::config.urlprefix') . '.medics.show', $id);
		}

		return Redirect::back()->withInput()->withErrors($medic->errors);
	}

	public function destroy($id)
	{
		if (strtoupper(Input::get('delete')) == 'DELETE')
		{
			$medic = Medic::findOrFail($id);
			$medic->delete();

			return Redirect::route(Config::get('aidkit::config.urlprefix') . '.medics.index');
		}
		else
		{
			return Redirect::route(Config::get('aidkit::config.urlprefix') . '.medics.show', $id);
		}
	}
}
